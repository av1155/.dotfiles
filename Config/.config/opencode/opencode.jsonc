{
    "$schema": "https://opencode.ai/config.json",

    "model": "anthropic/claude-sonnet-4-5-20250929",

    "permission": {
        "bash": "ask",
        "edit": "ask",
        "webfetch": "allow",
    },

    "plugin": ["opencode-openai-codex-auth"],

    "formatter": {
        "prettier": {
            "command": ["prettier", "--config", "{env:HOME}/.prettierrc.json", "--write", "$FILE"],
        },
        "clang-format": {
            "command": ["clang-format", "-i", "-style=file", "$FILE"],
        },
        "stylua": {
            "command": ["stylua", "--config-path", "{env:HOME}/.config/nvim/stylua.toml", "$FILE"],
            "extensions": [".lua"],
        },
    },

    "mcp": {
        "git": {
            "type": "local",
            "enabled": true,
            "command": ["uvx", "mcp-server-git"],
        },
        "fetch": {
            "type": "local",
            "enabled": true,
            "command": ["uvx", "mcp-server-fetch"],
        },
        "time": {
            "type": "local",
            "enabled": true,
            "command": ["uvx", "mcp-server-time"],
        },
        "context7": {
            "type": "local",
            "environment": { "CONTEXT7_API_KEY": "{env:CONTEXT7_API_KEY}" },
            "command": ["npx", "-y", "@upstash/context7-mcp"],
            "enabled": true,
        },
        "playwright": {
            "type": "local",
            "enabled": true,
            "command": ["npx", "@playwright/mcp@latest"],
        },
        "firecrawl": {
            "type": "local",
            "enabled": false,
            "environment": { "FIRECRAWL_API_KEY": "{env:FIRECRAWL_API_KEY}" },
            "command": ["npx", "-y", "firecrawl-mcp"],
        },
        "filesystem": {
            "type": "local",
            "enabled": false,
            "command": ["npx", "-y", "@modelcontextprotocol/server-filesystem", "."],
        },
        "sequential-thinking": {
            "type": "local",
            "enabled": false,
            "command": ["npx", "-y", "@modelcontextprotocol/server-sequential-thinking"],
        },
    },

    "agent": {
        "router": {
            "description": "Supervisor router; selects subagents and enforces stop conditions",
            "mode": "subagent",
            "model": "github-copilot/gpt-5",
            "temperature": 0.1,
            "tools": { "read": true, "grep": true, "glob": true, "webfetch": true, "bash": true },
            "permission": {
                "edit": "deny",
                "bash": {
                    "mkdir -p .opencode": "allow",
                    "mkdir -p .opencode/router": "allow",
                    "ls .opencode*": "allow",
                    "*": "deny",
                },
                "webfetch": "ask",
            },
        },

        "research": {
            "description": "Fetches external info/specs and extracts facts with citations",
            "mode": "subagent",
            "model": "github-copilot/gpt-5",
            "temperature": 0.2,
            "tools": {
                "webfetch": true,
                "write": true,
                "read": true,
                "grep": true,
                "glob": true,
                "bash": true,
            },
            "permission": {
                "webfetch": "allow",
                "edit": "ask",
                "bash": {
                    "mkdir -p .opencode": "allow",
                    "mkdir -p .opencode/research": "allow",
                    "ls .opencode*": "allow",
                    "*": "deny",
                },
            },
        },

        "code-reviewer": {
            "description": "Static code review: correctness, quality, maintainability",
            "mode": "subagent",
            "model": "github-copilot/gpt-5",
            "temperature": 0.1,
            "tools": { "read": true, "grep": true, "glob": true, "edit": false, "bash": true },
            "permission": {
                "edit": "deny",
                "bash": {
                    "mkdir -p .opencode": "allow",
                    "mkdir -p .opencode/reports": "allow",
                    "ls .opencode*": "allow",
                    "*": "deny",
                },
                "webfetch": "allow",
            },
        },

        "security-auditor": {
            "description": "Security audit for authZ/N, secrets, dependencies, config",
            "mode": "subagent",
            "model": "github-copilot/gpt-5",
            "temperature": 0.0,
            "tools": { "read": true, "grep": true, "glob": true, "bash": true },
            "permission": {
                "edit": "deny",
                "bash": {
                    "mkdir -p .opencode": "allow",
                    "mkdir -p .opencode/reports": "allow",
                    "ls .opencode*": "allow",
                    "*": "deny",
                },
                "webfetch": "allow",
            },
        },

        "linter": {
            "description": "Runs formatters/linters; auto-fixes safe issues",
            "mode": "subagent",
            "model": "github-copilot/gpt-5",
            "temperature": 0.1,
            "tools": {
                "bash": true,
                "read": true,
                "write": true,
                "patch": true,
                "glob": true,
                "grep": true,
            },
            "permission": {
                "bash": {
                    "*": "ask",
                    "eslint *": "allow",
                    "prettier *": "allow",
                    "ruff *": "allow",
                    "black *": "allow",
                    "isort *": "allow",
                    "flake8 *": "allow",
                    "gofmt *": "allow",
                    "golangci-lint run*": "allow",
                    "markdownlint *": "allow",
                    "shellcheck *": "allow",
                    "mkdir -p .opencode": "allow",
                    "mkdir -p .opencode/lint": "allow",
                    "ls .opencode*": "allow",
                    "git push": "ask",
                    "terraform *": "deny",
                },
                "edit": "allow",
            },
        },

        "refactorer": {
            "description": "Applies safe code changes per plan/review; small/medium edits",
            "mode": "subagent",
            "model": "github-copilot/gpt-5",
            "temperature": 0.15,
            "tools": {
                "edit": true,
                "write": true,
                "patch": true,
                "read": true,
                "grep": true,
                "glob": true,
                "bash": true,
            },
            "permission": {
                "edit": "allow",
                "bash": {
                    "*": "ask",
                    "mkdir -p .opencode": "allow",
                    "mkdir -p .opencode/refactor": "allow",
                    "ls .opencode*": "allow",
                },
                "webfetch": "deny",
            },
        },

        "test-runner": {
            "description": "Executes tests, summarizes failures, recommends fixes",
            "mode": "subagent",
            "model": "github-copilot/gpt-5",
            "temperature": 0.1,
            "tools": { "bash": true, "read": true, "grep": true },
            "permission": {
                "bash": {
                    "*": "ask",
                    "npm test*": "allow",
                    "npm run test*": "allow",
                    "pnpm test*": "allow",
                    "yarn test*": "allow",
                    "pytest *": "allow",
                    "python -m pytest *": "allow",
                    "go test ./...": "allow",
                    "cargo test": "allow",
                    "gradle test": "allow",
                    "dotnet test": "allow",
                    "mkdir -p .opencode": "allow",
                    "mkdir -p .opencode/test": "allow",
                    "ls .opencode*": "allow",
                    "git push": "ask",
                    "terraform *": "deny",
                },
            },
        },

        "debugger": {
            "description": "Diagnoses failures from logs/traces; proposes minimal fix",
            "mode": "subagent",
            "model": "github-copilot/gpt-5",
            "temperature": 0.1,
            "tools": { "read": true, "grep": true, "glob": true, "webfetch": true, "bash": true },
            "permission": {
                "edit": "ask",
                "bash": {
                    "mkdir -p .opencode": "allow",
                    "mkdir -p .opencode/debug": "allow",
                    "ls .opencode*": "allow",
                    "*": "deny",
                },
                "webfetch": "allow",
            },
        },

        "docs-writer": {
            "description": "Writes/updates docs, ADRs, changelogs",
            "mode": "subagent",
            "model": "github-copilot/gpt-5",
            "temperature": 0.4,
            "tools": {
                "read": true,
                "write": true,
                "edit": true,
                "grep": true,
                "glob": true,
                "bash": true,
            },
            "permission": {
                "edit": "allow",
                "bash": {
                    "mkdir -p .opencode": "allow",
                    "mkdir -p .opencode/docs": "allow",
                    "ls .opencode*": "allow",
                    "*": "deny",
                },
                "webfetch": "ask",
            },
        },

        "dependency-updater": {
            "description": "Upgrades dependencies safely with security/compat checks",
            "mode": "subagent",
            "model": "github-copilot/gpt-5",
            "temperature": 0.15,
            "tools": {
                "bash": true,
                "read": true,
                "write": true,
                "patch": true,
                "grep": true,
                "glob": true,
            },
            "permission": {
                "bash": {
                    "*": "ask",
                    "npm ci": "allow",
                    "npm install --no-audit --no-fund": "allow",
                    "pnpm install --frozen-lockfile": "allow",
                    "pnpm up*": "allow",
                    "yarn install --frozen-lockfile": "allow",
                    "yarn upgrade*": "allow",
                    "pip-compile*": "allow",
                    "poetry lock": "allow",
                    "poetry update*": "allow",
                    "uv sync": "allow",
                    "mkdir -p .opencode": "allow",
                    "mkdir -p .opencode/deps": "allow",
                    "ls .opencode*": "allow",
                    "git push": "ask",
                    "terraform *": "deny",
                },
                "edit": "allow",
            },
            "design-review": {
                "description": "Comprehensive visual design review (a11y, responsiveness, theme parity)",
                "mode": "subagent",
                "model": "github-copilot/gpt-5",
                "temperature": 0.1,
                "tools": {
                    "read": true,
                    "grep": true,
                    "glob": true,
                    "webfetch": true,
                    "mcp_playwright__*": true,
                },
                "permission": {
                    "edit": "deny",
                    "webfetch": "allow",
                    "bash": { "*": "deny" },
                },
            },
            "visual-checker": {
                "description": "Automates Quick Visual Check (navigate, screenshots, console logs, breakpoints)",
                "mode": "subagent",
                "model": "github-copilot/gpt-5",
                "temperature": 0.1,
                "tools": {
                    "read": true,
                    "glob": true,
                    "mcp_playwright__*": true,
                },
                "permission": {
                    "edit": "deny",
                    "webfetch": "ask",
                    "bash": { "*": "deny" },
                },
            },
        },
    },

    "keybinds": {
        "leader": "ctrl+b",
        "app_help": "<leader>h",
        "app_exit": "ctrl+c,<leader>q",
        "editor_open": "<leader>e",
        "theme_list": "<leader>t",
        "project_init": "<leader>i",
        "tool_details": "<leader>d",
        "thinking_blocks": "<leader>b",
        "session_export": "<leader>x",
        "session_new": "<leader>n",
        "session_list": "<leader>l",
        "session_share": "<leader>s",
        "session_unshare": "none",
        "session_interrupt": "esc",
        "session_compact": "<leader>c",
        "session_child_cycle": "ctrl+alt+]",
        "session_child_cycle_reverse": "ctrl+alt+[",
        "messages_page_up": "pgup",
        "messages_page_down": "pgdown",
        "messages_half_page_up": "ctrl+alt+u",
        "messages_half_page_down": "ctrl+alt+d",
        "messages_first": "ctrl+g",
        "messages_last": "ctrl+alt+g",
        "messages_copy": "<leader>y",
        "messages_undo": "<leader>u",
        "messages_redo": "<leader>r",
        "model_list": "<leader>m",
        "model_cycle_recent": "f2",
        "model_cycle_recent_reverse": "shift+f2",
        "agent_list": "<leader>a",
        "agent_cycle": "tab",
        "agent_cycle_reverse": "shift+tab",
        "input_clear": "ctrl+c",
        "input_paste": "ctrl+v",
        "input_submit": "enter",
        "input_newline": "shift+enter,alt+j",
    },
}
